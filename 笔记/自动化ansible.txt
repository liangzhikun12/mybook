			*运维自动化ansible
IaaS	基础设施和服务（提供硬件）
PaaS	平台和服务（提供硬件和操作系统）
SAAS	软件和服务（硬件、操作系统、软件）

常用自动化运维工具
ansible:python开发
saltstack:python开发
puppet:rule开发
fedric
chef
cfengine
func

*安装
安装epel源
yum -y install ansible

*pip安装：pip是安装Python包的管理器。类似yum
yum install python-pip python-devel
yum install gcc glibc-devel zibl-devel rpm-build openssl-devel
pip install --upgrade pip
pip install ansible --upgrade
*确认安装： ansible --version

*相关文件
/etc/ansible/ansible.cfg  	主配置文件，配置ansible工作特性
/etc/ansible/hosts		主机清单
/etc/ansible/riles/		存放角色的目录

/usr/bin/ansible 	 	主程序，临时命令执行工具
/usr/bin/ansible-doc	查看配置帮助文档，模块功能查看工具
/usr/bin/ansible-galaxy	下载/上传优秀代码或Roles模块的官网平台
/usr/bin/ansible-playbook	定制自动化任务，编排具备工具/usr/bin/ansible-pull远程执行命令的工具
/usr/bin/ansible-vault	文件加密工具	
/usr/bin/ansible-console	基于console界面与用户交互的执行工具

*添加主机清单
vim /etc/ansible/hosts
192.168.4.10
192.168.4.11
192.168.4.12

*用ping模块测试是否可以连接主机

*ansible命令格式:ansible <主机>[-m 指定模块][-a 主机要执行的命令]
--version	显示版本
-m module	指定模块
-v		详细过程	
--list-hosts 显示主机列表,简写--list 
-k		提示输入ssh连接密码
-K		提示输入sudo是的口令
-C		检查,并不执行
-T		执行命令的超时时间
-u		执行远程执行的用户
-b		代替旧版的sudo切换
	
ansible 192.168.4.10 -m ping -k      #-k代表输入口令
ansible all -m ping -k	         #测试所有/etc/ansible/hosts中的主机

*给主机分组
[db]
db1
db2
[web]
web1
web2
[cache]
cache

[app]
192.168.4.[10:13]	*添加ip 10至13的主机

[db]
192.168.4.10:2222	*还可以指定主机端口

[qq]
192.168.4.*

*ansible 配置文件修改
vim /etc/ansible/ansible.cfg
....
[defaults]
#inventory      = /etc/ansible/hosts		#主机列表配置文件
#library        = /usr/share/my_modules/	#库文件存放目录
#remote_tmp     = ~/.ansible/tmp	#临时py命令文件存放在远程主机;目录
#local_tmp      = ~/.ansible/tmp	#本机临时命令执行目录
#forks          = 5			#默认并发数
#sudo_user      = root			#默认sudo用户
#ask_sudo_pass = True			#每次执行ansible命令是否询问ssh密码
#ask_pass      = True			
#remote_port    = 22
host_key_checking = False		#检查对应服务器的host_key
log_path = /var/log/ansible.log      #日志文件

ansible all -m ping 	*配置了公钥后不用加-k

ansible-doc -l		*列出当前可以使用的模块
ansible all --list-host	*列出主机清单
ansible all -u root  -m command -a "ls /root"  *用command模块执行ls /root命令

*remove
ansible all -a 'removes=/etc/fstab cat /etc/fstab'   *文件存在则执行cat命令
ansible all -a 'removes=/etc/fs cat /etc/fstab'	    */etc/fs文件不存在则不执行cat命令

*creates
ansible all -a 'creates=/etc/fs cat /etc/fstab'	    */etc/fs文件不存在,则执行cat命令

*chdir
ansible all -a 'chdir=/boot ls'	*切换到boot命令后在目录上执行ls命令

*批量添加用户
ansible all -a 'useradd test1'

*测试用户是否存在
ansible all -a "getent passwd test1"
ansible all -a "grep "test1" /etc/passwd"

*给用户设置密码
ansible all -a "echo 1 | passwd --stdin test1"

*密码设置不成功
ansible all -a 'getent passwd test1'
web1 | CHANGED | rc=0 >>
test1:!!:18062:0:99999:7:::

*用shell模块运行命令,设置用户密码,密码设置成功
ansible all -m shell -a 'echo 1 | passwd --stdin test1'
更改用户 test1 的密码 。
passwd：所有的身份验证令牌已经成功更新。

*script 运行shell脚本模块
vim hosts
#!hostname
chmod +x hosts

*用script模块运行hosts脚本
 ansible all -m script -a "hosts"

*用copy模块,修改selinux文件,改为disable
ansible all -m copy -a 'src=/etc/selinux/config dest=/etc/selinux/config backup=yes'
*backup如果远程主机已经有这个文件,可以把将文件备份,默认是覆盖的
*src指定你要复制的文件路径,dest复制到远程主机的路径

ansible all -m shell -a 'ls /etc/selinux/'
db1 | CHANGED | rc=0 >>
config
config.2893.2019-06-15@14:43:47~	*远程主机备份文件的名称

*用copy模块复制文件时,修改属性,默认不修改属性
ansible all -m copy -a 'src=/etc/shadow dest=/data/ mode=000 owner=lisi'
*修文件所有者是lisi

*用copy模块生成文件内容
ansible all -m copy -a 'content="hello\nthank\n" dest=/data/f2'

*查看文件内容
ansible all -m shell -a 'cat /data/f2'
hello
thank

*fetch 把远程主机的文件复制到本机,只能复制单个,要多个文件时可以用tar打包在一起
ansible all -m fetch -a 'src=/etc/selinux/config dest=/data'

*查看复制目录
tree /data

*用file模块新建文件,name新建文件的路径,touch是创建
ansible all -m file -a 'name=/data/f3 state=touch'

*查看
ansible all -a 'ls  /data'

*用file模块新建文件,name新建文件的路径,sbsent是删除
ansible all -m file -a 'name=/data/f3 state=absent'

*用file模块新建文件夹,directory是新建文件夹,,sbsent是删除
ansible all -m file -a 'name=/data/dir1 state=directory'

*查看
ansible all -a 'ls  /data'

*用file模块新建文件夹,directory是新建文件夹,,sbsent是删除
ansible all -m file -a 'name=/data/dir1 state=sbsent'

*查看
ansible all -a 'ls  /data'

*file创建软连接
ansible all -m file -a 'src=/etc/fstab dest=/data/fstab.link state=link'

*查看
ansible all -m shell -a 'ls /data'

*用hostname 修改远程主机的主机名
ansible web1 -m hostname -a "name=web1.mage.com"

*查看
ansible db1 -m shell -a "hostname"

*用cron模块生成计划任务,每分钟minute,周weekday,job要运行的命令
ansible all -m cron -a 'minute=* weekday=1,3,5 job="/usr/bin/wall FBI warning" name=warningcron name=warning'

*查看
crontab -e

*关闭计划任务
ansible all -m cron -a 'disabled=true job="/bin/bin/wall FBI warning" name=warningcron'

*查看
crontab -e

*继续启用计划任务
ansible all -m cron -a 'disabled=no job="/usr/bin/wall FBI warning" name=warningcron'

*删除计划任务
ansible all -m cron -a 'job="/usr/bin/wall FBI warning" name=warningcron state=absent'

*yum模块安装centos软件包,下载vsftpd软件
ansible all -m yum -a 'name=httpd'

*yum模块查看卸载安装好的软件包,可以安装多个用,隔开即可
ansible all -m yum -a "name=httpd state=removed"

*查看是否卸载成功
ansible all -m shell -a "rpm -qa httpd"

*用server模块 启动/停用/开机自启 服务
ansible all -m service -a 'name=httpd state=started enabled=yes'  
*开启服务并设置开机自启

ansible all -m service -a 'name=httpd state=restarted'  
*重启服务

ansible all -m service -a 'name=httpd state=stopped enabled=false'
*关闭服务,并关闭开机自启

*user 模块创建用户管理用户
ansible all -m user -a 'name=nginx shell=/sbin/nologin system=yes home=/var/nginx groups=root,bin uid=80 comment="nginx service"'

*查看
ansible all -a "getent passwd nginx"

*user 模块删除用户管理用户,remove可以顺便删除用户的家目录
ansible all -m user -a "name=nginx state=absent remove=yes"

*查看
ansible all -a "getent passwd nginx"

*group模块管理组,创建nginx管理组,系统组,gid是80
ansible all -m group -a "name=nginx system=yes gid=80"

*查看
ansible all -m shell -a "getent group nginx"

*group模块管理组,删除nginx管理组
ansible all -m group -a "name=nginx state=absent"

*查看
ansible all -m shell -a "getent group nginx"

*ansible-galaxy 角色,安装在/root/.ansible/roles/目录中
ansible-galaxy install nginxinc.nginx

*ansible-galaxy 角色,删除
ansible-galaxy remove nginxinc.nginx

*ansible-playbook 剧本编写
vim hosts.yaml
---
- hosts: all		*全部主机
  remote_user: root	*以root身份运行

  tasks:
    - name: hello		*描述	
      command: hostname	*要执行的命令

*运行脚本
ansible-playbook hosts.yaml

*ansible-vault 加密yaml剧本,{view看 | edit 编辑 | rekey 修改口令}
ansible-vault encrypt hosts.yaml

*解密
ansible-vault decrypt hosts.yaml

*ansible-console 可交互执行命令,在交互模式中执行相应的模块

playbook核心元素
hosts    执行的远程主机列表
tasks	   任务集
varniables  内置变量或自定义变量在playbook中调用
templates    模板
handlers 和notity  







































































 


























































